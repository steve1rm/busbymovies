apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'
apply plugin: 'de.mannodermaus.android-junit5'
android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'

    dexOptions {
        maxProcessCount 2
        javaMaxHeapSize = "2g"
    }
    defaultConfig {
        applicationId "me.androidbox.busbymovies"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 7
        versionName "1.4.1"
        /*testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"*/
        testInstrumentationRunner "me.androidbox.busbymovies.testrunner.CustomTestRunner"
        jackOptions {
            /* Use of rendering for palette library */
            renderscriptTargetApi 25
            renderscriptSupportModeEnabled true

            /* Config only works for Android Gradle Plugin v2.1.0 or higher */
            vectorDrawables.useSupportLibrary = true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = ".debug"
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError = false
    }
    sourceSets {
        main { java.srcDirs = ['src/main/java', 'src/main/kotlin'] }
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    testOptions {
        unitTests.all {
            jacoco {
                /* Display code coverage for robolectric unit tests */
                includeNoLocationClasses = true
            }
        }
    }
}
apply from: "dependencies.gradle"
repositories {
    google()
    mavenCentral()
}
task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}
